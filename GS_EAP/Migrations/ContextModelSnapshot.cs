// <auto-generated />
using GS_EAP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GS_EAP.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("GS_EAP.Models.Parceiros.Parceiros", b =>
                {
                    b.Property<int>("IdParceiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomCEP")
                        .HasColumnType("text");

                    b.Property<string>("NomCidade")
                        .HasColumnType("text");

                    b.Property<string>("NomComplemento")
                        .HasColumnType("text");

                    b.Property<string>("NomEstado")
                        .HasColumnType("text");

                    b.Property<string>("NomLogradouro")
                        .HasColumnType("text");

                    b.Property<string>("NomParceiro")
                        .HasColumnType("text");

                    b.Property<string>("NumCNPJ")
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdParceiro");

                    b.ToTable("Parceiros");
                });

            modelBuilder.Entity("GS_EAP.Models.Usuarios.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomCEP")
                        .HasColumnType("text");

                    b.Property<string>("NomCidade")
                        .HasColumnType("text");

                    b.Property<string>("NomComplemento")
                        .HasColumnType("text");

                    b.Property<string>("NomEmail")
                        .HasColumnType("text");

                    b.Property<string>("NomEstado")
                        .HasColumnType("text");

                    b.Property<string>("NomLogradouro")
                        .HasColumnType("text");

                    b.Property<string>("NomSenha")
                        .HasColumnType("text");

                    b.Property<string>("NomUsuario")
                        .HasColumnType("text");

                    b.Property<string>("NumCPF")
                        .HasColumnType("text");

                    b.Property<string>("NumTelefone")
                        .HasColumnType("text");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GS_EAP.Models.Veiculos.Veiculos", b =>
                {
                    b.Property<int>("IdVeiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NomMarca")
                        .HasColumnType("text");

                    b.Property<string>("NomModelo")
                        .HasColumnType("text");

                    b.Property<string>("NumPlaca")
                        .HasColumnType("text");

                    b.HasKey("IdVeiculo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("GS_EAP.Models.Veiculos.Veiculos", b =>
                {
                    b.HasOne("GS_EAP.Models.Usuarios.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
